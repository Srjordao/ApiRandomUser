<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0.1 (Python 3.12.4 on linux)" generated="2024-08-12T07:15:10.124722" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/home/runner/work/ApiRandomUser/ApiRandomUser/RamdonUser/tests">
<suite id="s1-s1" name="Random-User-Test" source="/home/runner/work/ApiRandomUser/ApiRandomUser/RamdonUser/tests/random-user-test.robot">
<test id="s1-s1-t1" name="Conectar" line="13">
<status status="FAIL" start="2024-08-12T07:15:10.521349" elapsed="0.000407">Test cannot be empty.</status>
</test>
<test id="s1-s1-t2" name="Validar retorno 200 e JSON Válido" line="16">
<kw name="Teste de Requisicao Basica" owner="random-user-service">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-12T07:15:10.525597" level="FAIL">Non-existing index or alias 'consultarAPI'.</msg>
<var>${response}</var>
<arg>consultarAPI</arg>
<arg>/api</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-08-12T07:15:10.525375" elapsed="0.000880">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.526666" elapsed="0.000055"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${response.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.526920" elapsed="0.000046"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.527141" elapsed="0.000045"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json_data}</arg>
<arg>results</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.527358" elapsed="0.000046"/>
</kw>
<status status="FAIL" start="2024-08-12T07:15:10.524356" elapsed="0.003229">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<doc>Testa se a API responde corretamente e retorna um objeto JSON válido.</doc>
<tag>testeRequisicaoBasica</tag>
<status status="FAIL" start="2024-08-12T07:15:10.523656" elapsed="0.004126">Non-existing index or alias 'consultarAPI'.</status>
</test>
<test id="s1-s1-t3" name="Validar estrutura de resposta" line="22">
<kw name="Teste de Estrutura de Resposta" owner="random-user-service">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-12T07:15:10.530479" level="FAIL">Non-existing index or alias 'consultarAPI'.</msg>
<var>${response}</var>
<arg>consultarAPI</arg>
<arg>/api</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-08-12T07:15:10.530320" elapsed="0.000449">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.531105" elapsed="0.000051"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${json_data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.531340" elapsed="0.000044"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json_data}</arg>
<arg>results</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.531551" elapsed="0.000040"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<arg>${json_data}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.531758" elapsed="0.000040"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${expected_keys}</var>
<arg>gender</arg>
<arg>name</arg>
<arg>location</arg>
<arg>email</arg>
<arg>login</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.531960" elapsed="0.000046"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json_data['results'][0]}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.532381" elapsed="0.000043"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${json_data['results'][0]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.532593" elapsed="0.000146"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.532912" elapsed="0.000042"/>
</kw>
<var name="${key}"/>
<status status="NOT RUN" start="2024-08-12T07:15:10.532266" elapsed="0.000793"/>
</iter>
<var>${key}</var>
<value>@{expected_keys}</value>
<status status="NOT RUN" start="2024-08-12T07:15:10.532150" elapsed="0.001021"/>
</for>
<kw name="Create List" owner="BuiltIn">
<var>${expected_keysTwo}</var>
<arg>username</arg>
<arg>password</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.533399" elapsed="0.000047"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json_data['results'][0]['login']}</arg>
<arg>${keyTwo}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.533776" elapsed="0.000042"/>
</kw>
<kw name="Dictionary Should Contain Key" owner="Collections">
<arg>${json_data['results'][0]['login']}</arg>
<arg>${keyTwo}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.533982" elapsed="0.000039"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${keyTwo}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.534189" elapsed="0.000040"/>
</kw>
<var name="${keyTwo}"/>
<status status="NOT RUN" start="2024-08-12T07:15:10.533667" elapsed="0.000664"/>
</iter>
<var>${keyTwo}</var>
<value>@{expected_keysTwo}</value>
<status status="NOT RUN" start="2024-08-12T07:15:10.533578" elapsed="0.000856"/>
</for>
<status status="FAIL" start="2024-08-12T07:15:10.530083" elapsed="0.004511">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<doc>Testa a estrutura da resposta da API.</doc>
<tag>testeEstruturaResposta</tag>
<status status="FAIL" start="2024-08-12T07:15:10.529631" elapsed="0.005141">Non-existing index or alias 'consultarAPI'.</status>
</test>
<test id="s1-s1-t4" name="Validar tipos de dados" line="28">
<kw name="Teste de Tipos de Dados" owner="random-user-service">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-12T07:15:10.537309" level="FAIL">Non-existing index or alias 'consultarAPI'.</msg>
<var>${response}</var>
<arg>consultarAPI</arg>
<arg>/api</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-08-12T07:15:10.537134" elapsed="0.000453">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.537905" elapsed="0.000050"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${json_data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.538143" elapsed="0.000043"/>
</kw>
<kw name="Should Be String" owner="String">
<arg>${json_data['results'][0]['gender']}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.538347" elapsed="0.000039"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json_data['results'][0]['email']}</arg>
<arg>^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.538549" elapsed="0.000041"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json_data['results'][0]['dob']['date']}</arg>
<arg>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.538798" elapsed="0.000045"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json_data['results'][0]['registered']['date']}</arg>
<arg>\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.539010" elapsed="0.000040"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json_data['results'][0]['picture']['large']}</arg>
<arg>^https?://.*\.(?:png|jpe?g|gif|bmp)$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.539212" elapsed="0.000037"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json_data['results'][0]['picture']['medium']}</arg>
<arg>^https?://.*\.(?:png|jpe?g|gif|bmp)$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.539411" elapsed="0.000040"/>
</kw>
<kw name="Should Match Regexp" owner="BuiltIn">
<arg>${json_data['results'][0]['picture']['thumbnail']}</arg>
<arg>^https?://.*\.(?:png|jpe?g|gif|bmp)$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.539610" elapsed="0.000038"/>
</kw>
<kw name="Log" owner="BuiltIn">
<arg>${json_data['results'][0]['picture']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.539805" elapsed="0.000038"/>
</kw>
<status status="FAIL" start="2024-08-12T07:15:10.536922" elapsed="0.003067">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<kw name="Teste de Tipos de Dados - Postcode" owner="random-user-service">
<status status="NOT RUN" start="2024-08-12T07:15:10.540193" elapsed="0.000052"/>
</kw>
<doc>Testa se os tipos de dados na resposta da API estão corretos.</doc>
<tag>testeTiposDados</tag>
<status status="FAIL" start="2024-08-12T07:15:10.536509" elapsed="0.003897">Non-existing index or alias 'consultarAPI'.</status>
</test>
<test id="s1-s1-t5" name="Validar conteudo" line="35">
<kw name="Teste de Tipos de Conteudo" owner="random-user-service">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-12T07:15:10.542951" level="FAIL">Non-existing index or alias 'consultarAPI'.</msg>
<var>${response}</var>
<arg>consultarAPI</arg>
<arg>/api</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-08-12T07:15:10.542810" elapsed="0.000405">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${json_data}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.543579" elapsed="0.000051"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${name_title}</var>
<arg>${json_data["results"][0]["name"]["title"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.543806" elapsed="0.000043"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${allowed_titles}</var>
<arg>Mr</arg>
<arg>Ms</arg>
<arg>Miss</arg>
<arg>Mrs</arg>
<arg>Madame</arg>
<arg>Monsieur</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.544015" elapsed="0.000045"/>
</kw>
<kw name="List Should Contain Value" owner="Collections">
<arg>${allowed_titles}</arg>
<arg>${name_title}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.544237" elapsed="0.000040"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${name_country}</var>
<arg>${json_data["results"][0]["nat"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.544436" elapsed="0.000040"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>${list_country}</var>
<arg>AD</arg>
<arg>AE</arg>
<arg>AF</arg>
<arg>AG</arg>
<arg>AI</arg>
<arg>AL</arg>
<arg>AM</arg>
<arg>AO</arg>
<arg>AQ</arg>
<arg>AR</arg>
<arg>AS</arg>
<arg>AT</arg>
<arg>AU</arg>
<arg>AW</arg>
<arg>AX</arg>
<arg>AZ</arg>
<arg>BA</arg>
<arg>BB</arg>
<arg>BD</arg>
<arg>BE</arg>
<arg>BF</arg>
<arg>BG</arg>
<arg>BH</arg>
<arg>BI</arg>
<arg>BJ</arg>
<arg>BL</arg>
<arg>BM</arg>
<arg>BN</arg>
<arg>BO</arg>
<arg>BQ</arg>
<arg>BR</arg>
<arg>BS</arg>
<arg>BT</arg>
<arg>BV</arg>
<arg>BW</arg>
<arg>BY</arg>
<arg>BZ</arg>
<arg>CA</arg>
<arg>CC</arg>
<arg>CD</arg>
<arg>CF</arg>
<arg>CG</arg>
<arg>CH</arg>
<arg>CI</arg>
<arg>CK</arg>
<arg>CL</arg>
<arg>CM</arg>
<arg>CN</arg>
<arg>CO</arg>
<arg>CR</arg>
<arg>CU</arg>
<arg>CV</arg>
<arg>CW</arg>
<arg>CX</arg>
<arg>CY</arg>
<arg>CZ</arg>
<arg>DE</arg>
<arg>DJ</arg>
<arg>DK</arg>
<arg>DM</arg>
<arg>DO</arg>
<arg>DZ</arg>
<arg>EC</arg>
<arg>EE</arg>
<arg>EG</arg>
<arg>EH</arg>
<arg>ER</arg>
<arg>ES</arg>
<arg>ET</arg>
<arg>FI</arg>
<arg>FJ</arg>
<arg>FK</arg>
<arg>FM</arg>
<arg>FO</arg>
<arg>FR</arg>
<arg>GA</arg>
<arg>GB</arg>
<arg>GD</arg>
<arg>GE</arg>
<arg>GF</arg>
<arg>GG</arg>
<arg>GH</arg>
<arg>GI</arg>
<arg>GL</arg>
<arg>GM</arg>
<arg>GN</arg>
<arg>GP</arg>
<arg>GQ</arg>
<arg>GR</arg>
<arg>GS</arg>
<arg>GT</arg>
<arg>GU</arg>
<arg>GW</arg>
<arg>GY</arg>
<arg>HK</arg>
<arg>HM</arg>
<arg>HN</arg>
<arg>HR</arg>
<arg>HT</arg>
<arg>HU</arg>
<arg>ID</arg>
<arg>IE</arg>
<arg>IL</arg>
<arg>IM</arg>
<arg>IN</arg>
<arg>IO</arg>
<arg>IQ</arg>
<arg>IR</arg>
<arg>IS</arg>
<arg>IT</arg>
<arg>JE</arg>
<arg>JM</arg>
<arg>JO</arg>
<arg>JP</arg>
<arg>KE</arg>
<arg>KG</arg>
<arg>KH</arg>
<arg>KI</arg>
<arg>KM</arg>
<arg>KN</arg>
<arg>KP</arg>
<arg>KR</arg>
<arg>KW</arg>
<arg>KY</arg>
<arg>KZ</arg>
<arg>LA</arg>
<arg>LB</arg>
<arg>LC</arg>
<arg>LI</arg>
<arg>LK</arg>
<arg>LR</arg>
<arg>LS</arg>
<arg>LT</arg>
<arg>LU</arg>
<arg>LV</arg>
<arg>LY</arg>
<arg>MA</arg>
<arg>MC</arg>
<arg>MD</arg>
<arg>ME</arg>
<arg>MF</arg>
<arg>MG</arg>
<arg>MH</arg>
<arg>MK</arg>
<arg>ML</arg>
<arg>MM</arg>
<arg>MN</arg>
<arg>MO</arg>
<arg>MP</arg>
<arg>MQ</arg>
<arg>MR</arg>
<arg>MS</arg>
<arg>MT</arg>
<arg>MU</arg>
<arg>MV</arg>
<arg>MW</arg>
<arg>MX</arg>
<arg>MY</arg>
<arg>MZ</arg>
<arg>NA</arg>
<arg>NC</arg>
<arg>NE</arg>
<arg>NF</arg>
<arg>NG</arg>
<arg>NI</arg>
<arg>NL</arg>
<arg>NO</arg>
<arg>NP</arg>
<arg>NR</arg>
<arg>NU</arg>
<arg>NZ</arg>
<arg>OM</arg>
<arg>PA</arg>
<arg>PE</arg>
<arg>PF</arg>
<arg>PG</arg>
<arg>PH</arg>
<arg>PK</arg>
<arg>PL</arg>
<arg>PM</arg>
<arg>PN</arg>
<arg>PR</arg>
<arg>PS</arg>
<arg>PT</arg>
<arg>PW</arg>
<arg>PY</arg>
<arg>QA</arg>
<arg>RE</arg>
<arg>RO</arg>
<arg>RS</arg>
<arg>RU</arg>
<arg>RW</arg>
<arg>SA</arg>
<arg>SB</arg>
<arg>SC</arg>
<arg>SD</arg>
<arg>SE</arg>
<arg>SG</arg>
<arg>SH</arg>
<arg>SI</arg>
<arg>SJ</arg>
<arg>SK</arg>
<arg>SL</arg>
<arg>SM</arg>
<arg>SN</arg>
<arg>SO</arg>
<arg>SR</arg>
<arg>SS</arg>
<arg>ST</arg>
<arg>SV</arg>
<arg>SX</arg>
<arg>SY</arg>
<arg>SZ</arg>
<arg>TC</arg>
<arg>TD</arg>
<arg>TF</arg>
<arg>TG</arg>
<arg>TH</arg>
<arg>TJ</arg>
<arg>TK</arg>
<arg>TL</arg>
<arg>TM</arg>
<arg>TN</arg>
<arg>TO</arg>
<arg>TR</arg>
<arg>TT</arg>
<arg>TV</arg>
<arg>TW</arg>
<arg>TZ</arg>
<arg>UA</arg>
<arg>UG</arg>
<arg>UM</arg>
<arg>US</arg>
<arg>UY</arg>
<arg>UZ</arg>
<arg>VA</arg>
<arg>VC</arg>
<arg>VE</arg>
<arg>VG</arg>
<arg>VI</arg>
<arg>VN</arg>
<arg>VU</arg>
<arg>WF</arg>
<arg>WS</arg>
<arg>XK</arg>
<arg>YE</arg>
<arg>YT</arg>
<arg>ZA</arg>
<arg>ZM</arg>
<arg>ZW</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.544633" elapsed="0.000178"/>
</kw>
<kw name="List Should Contain Value" owner="Collections">
<arg>${list_country}</arg>
<arg>${name_country}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.545541" elapsed="0.000048"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${json_data["results"][0]["location"]["coordinates"]["latitude"]} &gt;= -90 and ${json_data["results"][0]["location"]["coordinates"]["latitude"]} &lt;= 90</arg>
<arg>Should Be True</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.545774" elapsed="0.000042"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${json_data["results"][0]["location"]["coordinates"]["longitude"]} &gt;= -180 and ${json_data["results"][0]["location"]["coordinates"]["longitude"]} &lt;= 180</arg>
<arg>Should Be True</arg>
<arg>${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-08-12T07:15:10.545993" elapsed="0.000039"/>
</kw>
<status status="FAIL" start="2024-08-12T07:15:10.542593" elapsed="0.003592">Non-existing index or alias 'consultarAPI'.</status>
</kw>
<doc>Testa o conteúdo específico dos campos retornados pela API.</doc>
<tag>testeConteudo</tag>
<status status="FAIL" start="2024-08-12T07:15:10.542186" elapsed="0.004168">Non-existing index or alias 'consultarAPI'.</status>
</test>
<status status="FAIL" start="2024-08-12T07:15:10.183643" elapsed="0.364523"/>
</suite>
<status status="FAIL" start="2024-08-12T07:15:10.169247" elapsed="0.382995"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="5" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">testeConteudo</stat>
<stat pass="0" fail="1" skip="0">testeEstruturaResposta</stat>
<stat pass="0" fail="1" skip="0">testeRequisicaoBasica</stat>
<stat pass="0" fail="1" skip="0">testeTiposDados</stat>
</tag>
<suite>
<stat pass="0" fail="5" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="5" skip="0" id="s1-s1" name="Random-User-Test">Tests.Random-User-Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
